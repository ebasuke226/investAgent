version: '3.8'

services:
  # PostgreSQL
  postgres:
    image: postgres:13
    container_name: ${COMPOSE_PROJECT_NAME}-postgres
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: mlflow_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mlops-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "mlflow"]
      interval: 10s
      retries: 5

  # MySQL
  mysql:
    image: mysql:8
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: your_database
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - mlops-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 10s
      retries: 5

  # MLflow Tracking Server
  mlflow-tracking:
    build:
      context: .
      dockerfile: docker/mlflow-tracking.Dockerfile
    env_file:
      - .env
    container_name: ${COMPOSE_PROJECT_NAME}-mlflow-tracking
    ports:
      - "5003:5003"
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      BACKEND_STORE_URI: postgresql://mlflow:${POSTGRES_PASSWORD}/@postgres/mlflow_db
      ARTIFACT_ROOT: /app/mlflow-tracking/artifacts
      MLFLOW_TRACKING_URI: http://mlflow-tracking:5003
      MLFLOW_ARTIFACT_URI: models:/Stock_Chart_Classification_Model/Production
    volumes:
      - mlflow_data:/mlflow
      - ./mlflow-tracking/artifacts:/app/mlflow-tracking/artifacts
      - ./mlflow-tracking/runs:/app/mlflow-tracking/runs
      - .git:/app/.git
    networks:
      - mlops-network
    depends_on:
      postgres:
        condition: service_healthy
    command: ["bash", "-c", "conda run -n mlflow_jupyter_env /app/mlflow-tracking/start.sh"]
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:5003/ | grep 200 || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 5

  # FastAPI
  fastapi:
    build:
      context: .
      dockerfile: docker/fastapi.Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-fastapi
    ports:
      - "8000:8000"
    environment:
      MLFLOW_TRACKING_URI: http://mlflow-tracking:5003
      MLFLOW_ARTIFACT_URI: models:/Stock_Chart_Classification_Model/Production
      PYTHONPATH: /app
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      GOOGLE_NEWS_API_KEY: ${GOOGLE_NEWS_API_KEY}
      FRED_API_KEY: ${FRED_API_KEY}
      GOOGLE_DRIVE_FOLDER_ID: ${GOOGLE_DRIVE_FOLDER_ID}
      CHROMA_DB_HOST: chromadb
      CHROMA_DB_PORT: 8001
    volumes:
      - ./fastapi/app:/app/app
      - ./mlflow-tracking/artifacts:/app/mlflow-tracking/artifacts
      - .git:/app/.git
    networks:
      - mlops-network
    depends_on:
      - mlflow-tracking
      - postgres
      - mysql
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--app-dir", "/app"]

  # Streamlit
  streamlit:
    build:
      context: .
      dockerfile: docker/streamlit.Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-streamlit
    ports:
      - "8501:8501"
    environment:
      FASTAPI_URL: http://fastapi:8000
    volumes:
      - ./streamlit:/app
    command: ["streamlit", "run", "/app/app.py", "--server.port=8501", "--server.address=0.0.0.0"]
    networks:
      - mlops-network
    depends_on:
      - fastapi

  # Jupyter
  jupyter:
    build:
      context: .
      dockerfile: docker/jupyter.Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-jupyter
    ports:
      - "8888:8888"
    environment:
      JUPYTER_ENABLE_LAB: "yes"
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MLFLOW_TRACKING_URI: http://mlflow-tracking:5003
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      MLFLOW_ARTIFACT_URI: models:/Stock_Chart_Classification_Model/Production
    volumes:
      - ./jupyter/notebooks:/home/jovyan/work
      - ./shared/data:/home/jovyan/data
      - ./mlflow-tracking/artifacts:/app/mlflow-tracking/artifacts
      - .git:/app/.git
    command: start-notebook.sh --NotebookApp.token=''
    depends_on:
      - chromadb
      - postgres
      - mysql
      - mlflow-tracking
    networks:
      - mlops-network

  # ChromaDB
  chromadb:
    build:
      context: .
      dockerfile: docker/chroma.Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}-chromadb
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma
    command: ["uvicorn", "chromadb.app:app", "--host", "0.0.0.0", "--port", "8000"]
    entrypoint: ["/bin/sh", "-c", "chown -R 1000:1000 /chroma && chmod -R 777 /chroma && uvicorn chromadb.app:app --host 0.0.0.0 --port 8000"]
    networks:
      - mlops-network

networks:
  mlops-network:
    driver: bridge

volumes:
  postgres_data:
  mysql_data:
  mlflow_data:
  chroma_data:
  jupyter_data:
